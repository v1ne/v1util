// Copyright © 2012-2020 Franta Fulin
//
// This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software.
//
// 2. If you use this software, in source or binary form, an acknowledgment in the product documentation or credits would be appreciated but is not required. Example: "This product uses FASTBuild © 2012-2020 Franta Fulin."
//
// 3. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
//
// 4. This notice may not be removed or altered from any source distribution.


// Visual Studio 2019
//------------------------------------------------------------------------------
.VS2019_BasePath         = 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community'
.VS2019_Version          = '14.25.28610'

// X64 Compiler
//------------------------------------------------------------------------------
Compiler( 'Compiler-VS2019-x64' )
{
    .Root       = '$VS2019_BasePath$/VC/Tools/MSVC/$VS2019_Version$/bin/Hostx64/x64'
    .Executable = '$Root$/cl.exe'
    .ExtraFiles = { '$Root$/c1.dll'
                    '$Root$/c1xx.dll',
                    '$Root$/c2.dll',
                    '$Root$/msobj140.dll'
                    '$Root$/mspdb140.dll'
                    '$Root$/mspdbcore.dll'
                    '$Root$/mspdbsrv.exe'
                    '$Root$/mspft140.dll'
                    '$Root$/msvcp140.dll'
                    '$Root$/tbbmalloc.dll' // Required as of 16.2 (14.22.27905)
                    '$Root$/vcruntime140.dll'
                    '$Root$/1033/clui.dll'
                    '$Root$/1033/mspft140ui.dll' // Localized messages for static analysis
                  }

    #if ENABLE_LIGHT_CACHE
        .UseLightCache_Experimental = true
    #endif
}

// X64 ToolChain for Windows
//------------------------------------------------------------------------------
.ToolChain_VS2019_Windows_X64 =
[
    .Platform                       = 'x64'

    // Paths
    .VSIncludePaths                 = ' -I"$VS2019_BasePath$/VC/Tools/MSVC/$VS2019_Version$/include/"'
    .VSLibPaths                     = ' /LIBPATH:"$VS2019_BasePath$/VC/Tools/MSVC/$VS2019_Version$/lib/x64"'

    // Compiler
    .Compiler                       = 'Compiler-VS2019-X64'
    .CommonCompilerOptions          = ' /Z7 /nologo /c'
                                    + ' /Zc:inline'         // Remove unreferenced COMDATs at compile time (VS2013.2+)
                                    + ' /Zc:strictStrings'  // Require const only usage of string literals (VS2013+)
                                    + ' /diagnostics:caret' // Use improved warning/error messages

                                    // Warnings
                                    + ' /Wall'              // Enable all warnings (we'll disable those that are not useful)
                                    ;+ ' /WX'                // Warnings as errors

                                    // These warnings are useful, but fire in system headers (Windows SDK or MSVC CRT)
                                    + ' /wd4668' // '%s' is not defined as a preprocessor macro, replacing with '0' for '#if/#elif'

                                    // These warnings are not useful
                                    + ' /wd4061' // enumerator '%s' in switch of enum '%s' is not explicitly handled by a case label
                                    + ' /wd4255' // '%s': no function prototype given: converting '()' to '(void)''
                                    + ' /wd4265' // class has virtual methods, but no virtual dtor
                                    + ' /wd4266' //  no override available for virtual member function from base 'type'; function is hidden
                                    + ' /wd4355' // "this" used in base member initializer list
                                    + ' /wd4365' // signed/unsigned mismatch
                                    + ' /wd4371' // layout may have changed due to better packing
                                    + ' /wd4388' // signed/unsigned mismatch
                                    + ' /wd4514' // '%s': unreferenced inline function has been removed
                                    + ' /wd4571' // Informational: catch(...) semantics changed since Visual C++ 7.1; structured exceptions (SEH) are no longer caught
                                    + ' /wd4577' // 'noexcept' used with no exception handling mode specified; termination on exception is not guaranteed. Specify /EHsc
                                    + ' /wd4625' // '%s': copy constructor was implicitly defined as deleted
                                    + ' /wd4626' // '%s': assignment operator was implicitly defined as deleted
                                    + ' /wd4710' // '%s': function not inlined
                                    + ' /wd4711' // function '%s' selected for automatic inline expansion
                                    + ' /wd4800' // Implicit conversion from '%s' to bool. Possible information loss
                                    + ' /wd4820' // '%s': '%u' bytes padding added after data member '%s'
                                    + ' /wd4866' // Compiler may not enforce left-to-right evaluation
                                    + ' /wd4868' // Compiler may not enforce left-to-right evaluation order in braced initializer list
                                    + ' /wd5026' // '%s': move constructor was implicitly defined as deleted
                                    + ' /wd5027' // '%s': move assignment operator was implicitly defined as deleted
                                    + ' /wd5039' // '%s': pointer or reference to potentially throwing function passed to extern C function under -EHc. Undefined behavior may occur if this function throws an exception.
                                    + ' /wd5045' // Compiler will insert Spectre mitigation for memory load if /Qspectre switch specified
                                    + ' /wd5204' // '%s': class has virtual functions, but its trivial destructor is not virtual; instances of objects derived from this class may not be destructed correctly

                                    // my options:
                                    + ' /JMC /std:c++17'
                                    + .MyMsvcClFlags

                                    // Include Paths
                                    + ' /I"./"'
                                    + .VSIncludePaths

    .CompilerOptions                = ' $CommonCompilerOptions$ "%1" /Fo"%2"'
    .CompilerOptionsC               = ' $CommonCompilerOptions$ "%1" /Fo"%2"'
    .CompilerOptionsDeoptimized     = ' $CommonCompilerOptions$ "%1" /Fo"%2"'
    .PCHOptions                     = ' $CommonCompilerOptions$ "%1" /Fo"%3" /Fp"%2" /Yc"PrecompiledHeader.h"'

    // Librarian
    .Librarian                      = '$VS2019_BasePath$/VC/Tools/MSVC/$VS2019_Version$/bin/Hostx64/x64/lib.exe'
    .LibrarianOptions               = '/WX /NOLOGO /OUT:"%2" "%1"'

    // Linker
    .Linker                         = '$VS2019_BasePath$/VC/Tools/MSVC/$VS2019_Version$/bin/Hostx64/x64/link.exe'
    .LinkerOptions                  = '/WX /NOLOGO /INCREMENTAL:NO /OUT:"%2" "%1" /DEBUG'
                                    + .VSLibPaths
    //CRT
    .CRTLibs_Static                 = ''
                                    + ' libvcruntime.lib'
                                    ;+ ' libucrt.lib'

    // File Extensions
    .LibExtension                   = '.lib'
    .ExeExtension                   = '.exe'

    // Exception Control
    .UseExceptions                  = ' /EHsc'
]

// PATH environment variable
//------------------------------------------------------------------------------
.VS_2019_PATH                       = '$VS2019_BasePath$/Common7/IDE/;$VS2019_BasePath$/VC/Tools/MSVC/$VS2019_Version$/bin/Hostx64/x64'

// Platform Toolset for Project Generation
//------------------------------------------------------------------------------
.VS_2019_PlatformToolset            = 'v142'

// _MSC_VER
//------------------------------------------------------------------------------
.VS2019_MSC_VER                     = '1920'

//------------------------------------------------------------------------------
